services:
  - docker

script:
  # Build Image
  - docker build -t mlerczak/haproxy-letsencrypt .

  # Test interactive mode
  - docker run -ti mlerczak/haproxy-letsencrypt -vv
  - docker run -ti mlerczak/haproxy-letsencrypt -vv | grep "HA-Proxy version"
  - docker run -ti mlerczak/haproxy-letsencrypt -vv | grep "Encrypted password support"
  - docker run -ti mlerczak/haproxy-letsencrypt -vv | grep "OpenSSL 1.1.0f"

  # Test daemon mode (default settings)
  - docker run -d -p 80:80 --name haproxy mlerczak/haproxy-letsencrypt && sleep 1
  - curl -u admin:admin http://127.0.0.1/admin?stats
  - docker rm -f haproxy || true

  # Test providing custom HAProxy config, and restarting after making changes in that config
  - docker run -d -p 80:80 -v $(pwd)/container-files/etc/haproxy/haproxy.cfg:/custom-haproxy.cfg -e HAPROXY_CONFIG=/custom-haproxy.cfg --name haproxy mlerczak/haproxy-letsencrypt && sleep 5
  - docker logs -f haproxy > /tmp/docker-haproxy.log 2>&1 &
  - sleep 5

  # Test if HAProxy uses the provided alternative config
  - grep "HAProxy started with /my-haproxy.cfg config" /tmp/docker-haproxy.log

  # Make a change and check if HAProxy restarts
  - echo "" >> container-files/etc/haproxy/haproxy.cfg && sleep 1 
  - grep "Restarting HAProxy due to config changes" /tmp/docker-haproxy.log

  # Check HAProxy stats
  - curl -sSLi http://127.0.0.1/admin?stats | grep '401 Unauthorized'
  - curl -sSLi --user admin:admin http://127.0.0.1/admin?stats
  - curl -sSLi --user admin:admin http://127.0.0.1/admin?stats | grep '200 OK'
  - curl -sSLi --user admin:admin http://127.0.0.1/admin?stats | grep 'Statistics Report'

  # Invalid config test
  - echo "This config is custom" > container-files/etc/haproxy/haproxy.cfg && sleep 1

  # Mount the mounted .cfg file and check its content - we expect there 'blabla'
  - docker run --volumes-from haproxy --entrypoint sh mlerczak/haproxy-letsencrypt -c 'cat /custom-haproxy.cfg' | grep 'This config is custom'

  # Check for HAProxy warnings
  - grep "Fatal errors found in configuration" /tmp/docker-haproxy.log
  - docker rm -f haproxy || true